---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 5.2.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    # Values yaml: https://github.com/goauthentik/helm/blob/main/charts/authentik/values.yaml
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.2.1

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: ipv4.${CLUSTER_DOMAIN}
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hajimari.io/enable: "true"
        hajimari.io/icon: shield-account
        hajimari.io/appName: authentik

      hosts:
        - host: id.${CLUSTER_DOMAIN}
          paths:
            - path: /

      tls:
        - secretName: authentik-${CLUSTER_NAME}-tls
          hosts:
            - id.${CLUSTER_DOMAIN}

    geoip:
      enabled: false
    authentik:
      email:
        host: ${SECRET_SMTP_HOST}
        port: ${SECRET_SMTP_PORT}
        password: ${SECRET_SMTP_PASSWORD}
        username: ${SECRET_SMTP_USERNAME}
        use_ssl: true
        from: id@${CLUSTER_DOMAIN}
      secret_key: ${SECRET_KEYAUTHENTIK_DB_PASSWORD}
      log_level: debug

      error_reporting:
        enabled: false

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: "${POSTGRES_ADDRESS}"
        name: authentik
        user: authentik
        password: ${SECRET_AUTHENTIK_DB_PASSWORD}
      redis:
        host: "{{ .Release.Name }}-redis-master"
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}

    prometheus:
      serviceMonitor:
        create: false
