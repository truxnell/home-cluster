---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sabnzbd
      version: 9.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/sabnzbd
      tag: v3.5.1

    env:
      TZ: "${TZ}"
      HOST_WHITELIST_ENTRIES: "sabnzbd.${CLUSTER_DOMAIN}, sabnzbd"

    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          external-dns/is-public: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-system-rfc1918-ips@kubernetescrd
          hajimari.io/enable: "true"
          hajimari.io/icon: "download-box"
        hosts:
          - host: &host "sabnzbd.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: &tls sabnzbd-${CLUSTER_NAME}-tls

      api:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          external-dns/is-public: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-system-rfc1918-ips@kubernetescrd
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *tls

    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config-v1
      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS}
            path: /volume1/
        mountPath: /media
        readOnly: false

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 5600

    resources:
      requests:
        cpu: 1500m
        memory: 2000Mi
