---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 5m
  chart:
    spec:
      chart: home-assistant
      version: 13.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  dependsOn:
    - name: postgresql
      namespace: databases
  values:
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2022.7.3

    env:
      TZ: "${TZ}"

    envFrom:
      - secretRef:
          name: home-assistant-secrets

    podAnnotations:
      secret.reloader.stakater.com/reload: home-assistant-secrets

    initContainers:
      wait-for-pg:
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command:
          [
            "sh",
            "-c",
            'until nc -vz postgresql.databases 5432; do echo "Waiting for postgresql..."; sleep 3; done;',
          ]

    hostNetwork: true

    dnsPolicy: ClusterFirstWithHostNet

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${LB_HOMEASSISTANT}"
        externalTrafficPolicy: Local

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${EXTERNAL_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-assistant"
        hosts:
          - host: &host "hass.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: tls.hass

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config-v1
      nfs-nas-backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS}
            path: /volume1/backup/kubernetes/apps/homeassistant
        mountPath: /data/backups
        readOnly: false

    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/k8s-at-home/code-server
          tag: v4.4.0
        env:
          TZ: "${Tz}"
        # git:
        #   deployKeySecret: code-server
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
            external-dns/is-public: "false"
          hosts:
            - host: &host-code "hass-config.${EXTERNAL_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host-code
              secretName: tls.hass-config

        volumeMounts:
          - name: config
            mountPath: /config

      resources:
        requests:
          cpu: 10m
          memory: 110M
        limits:
          memory: 454M

    resources:
      requests:
        cpu: 48m
        memory: 443M
      limits:
        memory: 709M
