---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: readarr
  namespace: organizarrs
spec:
  interval: 5m
  chart:
    spec:
      chart: readarr
      version: 6.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    image:
      repository: ghcr.io/k8s-at-home/readarr-nightly
      tag: v0.1.1.1377

    env:
      TZ: ${TZ}

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: &cert ${CLUSTER_CERT}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${EXTERNAL_DOMAIN}/css/base/readarr/plex.css"></head>';
            sub_filter_once on;
          external-dns/is-public: "false"
          hajimari.io/enable: "true"
          hajimari.io/icon: book-open
        hosts:
          - host: &host readarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: &tls tls.readarr

      api:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: *cert
          external-dns/is-public: "false"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *tls

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 100

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-v1
      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS_2}
            path: /tank/
        mountPath: /media
        readOnly: false
      nfs-nas-backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS_2}
            path: /tank/backup/kubernetes/apps/readarr
        mountPath: /config/Backups
        readOnly: false

    resources:
      requests:
        cpu: 15m
        memory: 866M
      limits:
        memory: 2347M

    prometheus:
      podMonitor:
        enabled: true
        interval: 3m
        scrapeTimeout: 1m30s
