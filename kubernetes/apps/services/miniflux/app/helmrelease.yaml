---
# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app miniflux
  namespace: services
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8@sha256:d9512db71f25c905cf44a9b336800fbfa1dde48a1aadfbf4f64888ef0a0c2d66
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: *app
    controller:
      annotations:
        reloader.stakater.com/auto: 'true'
    image:
      repository: ghcr.io/miniflux/miniflux
      tag: 2.0.44
    env:
      CREATE_ADMIN: '1'
      DEBUG: '1'
      LOG_DATE_TIME: '1'
      METRICS_ALLOWED_NETWORKS: '${NETWORK_K8S_POD_CIDR}'
      METRICS_COLLECTOR: '1'
      OAUTH2_CLIENT_ID: miniflux
      OAUTH2_USER_CREATION: '1'
      OAUTH2_OIDC_DISCOVERY_ENDPOINT: 'https://auth.${EXTERNAL_DOMAIN}'
      OAUTH2_PROVIDER: oidc
      OAUTH2_REDIRECT_URL: 'https://miniflux.${EXTERNAL_DOMAIN}/oauth2/oidc/callback'
      POLLING_SCHEDULER: entry_frequency
      POLLING_FREQUENCY: '15'
      RUN_MIGRATIONS: '1'
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: &port 8080
    ingress:
      main:
        enabled: true
        ingressClassName: 'nginx'
        annotations:
          hajimari.io/icon: mdi:rss
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /healthcheck
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
