---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app ingress-nginx-external
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.8.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    controller:
      replicaCount: 2
      extraEnvs:
        - name: TZ
          value: "${TZ}"

      allowSnippetAnnotations: "true"
      service:
        loadBalancerIP: "${LB_NGINX_INGRESS_EXT}"
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "ingress-ext.${EXTERNAL_DOMAIN}"
        externalTrafficPolicy: Local

      publishService:
        enabled: true

      ingressClassResource:
        name: external-nginx
        default: false

      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        # custom-http-errors: >-
        #   401,403,404,500,501,502,503
        enable-brotli: "true"
        enable-real-ip: "true"
        forwarded-for-header: "CF-Connecting-IP"
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 100000
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        # use-forwarded-headers: "true"
        # The below X-Clacks-Overehead is a do-nothing header
        # That is simply a memoriam for Sir Terry Pratchett
        # Ref: https://xclacksoverhead.org/home/about
        location-snippet: |
          add_header X-Clacks-Overhead "GNU Terry Pratchett" always;
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true
        prometheusRule:
          enabled: false

      extraArgs:
        default-ssl-certificate: "networking/${EXTERNAL_DOMAIN/./-}-tls"

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: *app

      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-proxied-networks"

      resources:
        requests:
          memory: 250Mi
          cpu: 20m
        limits:
          memory: 1000Mi

  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - kind: ConfigMap
      name: cloudflare-proxied-networks
      valuesKey: cloudflare-proxied-networks.txt
      targetPath: controller.config.proxy-real-ip-cidr
