---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.9.1
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 15m
  install:
    timeout: 20m
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    timeout: 20m
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: false

    query:
      enabled: true
      replicaCount: 2
      dnsDiscovery:
        sidecarsService: prometheus-thanos-discovery
        sidecarsNamespace: monitoring
      replicaLabels:
        - "__replica__" # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      resources:
        requests:
          cpu: 15m
          memory: 64M
        # limits:
        #   memory: 99M

    queryFrontend:
      enabled: true
      replicaCount: 2
      ingress:
        enabled: true
        hostname: "thanos.${EXTERNAL_DOMAIN}"
        ingressClassName: "internal-nginx"
        tls: true

    bucketweb:
      enabled: true
      replicaCount: 2
      resources:
        requests:
          cpu: 15m
          memory: 64M
        # limits:
        #   memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "2"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        # limits:
        #   memory: 270M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 100Gi

    storegateway:
      enabled: true
      replicaCount: 2
      resources:
        requests:
          cpu: 23m
          memory: 204M
        # limits:
        #   memory: 226M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 1Gi

    ruler:
      enabled: true
      replicaCount: 2
      replicaLabel: __replica__
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      alertmanagers:
        - http://prometheus-alertmanager.monitoring.svc.cluster.local:9093
      clusterName: cluster-0 # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 512Mi
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 113M

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  valuesFrom:
    - kind: Secret
      name: thanos
      valuesKey: S3_BUCKET_NAME
      targetPath: objstoreConfig.config.bucket
    - kind: Secret
      name: thanos
      valuesKey: S3_BUCKET_HOST
      targetPath: objstoreConfig.config.endpoint
    - kind: Secret
      name: thanos
      valuesKey: S3_ACCESS_KEY
      targetPath: objstoreConfig.config.access_key
    - kind: Secret
      name: thanos
      valuesKey: S3_SECRET_KEY
      targetPath: objstoreConfig.config.secret_key
