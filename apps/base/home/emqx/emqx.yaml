---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: emqx
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://repos.emqx.io/charts
      chart: emqx
      version: 4.3.12
      sourceRef:
        kind: HelmRepository
        name: emqx-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  # Values link: https://github.com/emqx/emqx-chart/blob/master/charts/emqx/values.yaml
  values:
    image:
      repository: emqx/emqx
      version: 4.3.8
    replicaCount: 3
    recreatePods: true
    service:
      type: LoadBalancer
      loadBalancerIP: "${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_EMQX}"

    emqxConfig:
      EMQX_ALLOW_ANONYMOUS: "false"
      EMQX_ADMIN_PASSWORD: "${EMQX_ADMIN_PASSWORD}"
      EMQX_AUTH__MNESIA__PASSWORD_HASH: plain
      EMQX_AUTH__USER__1__USERNAME: "${EMQX_USERNAME}"
      EMQX_AUTH__USER__1__PASSWORD: "${EMQX_PASSWORD}"

    emqxAclConfig: >
      {allow, {user, "dashboard"}, subscribe, ["$SYS/#"]}.
      {allow, {ipaddr, "127.0.0.1"}, pubsub, ["$SYS/#", "#"]}.
      {allow, all, subscribe, ["$SYS/#", {eq, "#"}]}.
      {allow, all}.

    emqxLoadedPlugins: >
      {emqx_management, true}.
      {emqx_recon, true}.
      {emqx_retainer, true}.
      {emqx_dashboard, true}.
      {emqx_telemetry, false}.
      {emqx_rule_engine, true}.
      {emqx_bridge_mqtt, false}.
      {emqx_auth_mnesia, true}.
      {emqx_prometheus, true}.

    emqxLoadedModules: >
      {emqx_mod_presence, true}.
      {emqx_mod_delayed, false}.
      {emqx_mod_rewrite, false}.
      {emqx_mod_subscription, false}.
      {emqx_mod_topic_metrics, true}.

    resources:
      limits:
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 150Mi
    persistence:
      enabled: true
      size: 100Mi
      storageClass: "rook-ceph-block"
      accessMode: ReadWriteOnce
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
