---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bitwardenrs
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: bitwardenrs
      version: 2.1.11
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  # Values link: https://github.com/k8s-at-home/charts/blob/master/charts/stable/bitwardenrs/values.yaml
  values:
    image:
      repository: bitwardenrs/server
      tag: 1.23.0-alpine
    bitwardenrs:
      signupsAllowed: true
      domain: "https://bitwarden.${CLUSTER_DOMAIN}" # TODO rename with cluster variable
      admin:
        existingSecret:
          enabled: true
          name: bitwarden-secrets
          tokenKey: adminToken
      externalDatabase:
        enabled: true
        # Supported values: 'mysql', 'postgresql'.
        type: "mysql"
        # Database host. Required if external database is enabled.
        host: "mariadb-galera.infra-mariadb-galera.svc.cluster.local"
        # Database port. Optional, default value is specific to the database backend.
        port: "3306"
        # Database name.
        database: "bitwarden_rs"
        # Database user.
        user: ""
        # Database password. Special characters must be escaped with percent encoding.
        password: ""
        # Use existing secret for database credentials.
        existingSecret:
          enabled: true
          name: "bitwarden-secrets"
          userKey: "userKey"
          # Special characters in the password value must be escaped with percent encoding.
          passwordKey: "passwordKey"
    persistence:
      enabled: true
      existingClaim: bitwardenrs-config-v1
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      secret.reloader.stakater.com/reload: "home-assistant"
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true

